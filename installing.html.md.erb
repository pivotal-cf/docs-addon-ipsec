---
title: Installing <%= vars.product_full %>
owner: Security Engineering
---

<strong><%= modified_date %></strong>

This topic describes how to prepare your network for <%= vars.product_full %>,
create an <%= vars.product_short %> runtime config, and add <%= vars.product_short %> to your deployment.

##<a id="overview"></a>Overview

To install <%= vars.product_short %>, you must do the following:

  1. [Configure Network Security](#config-network)
  1. [Create the <%= vars.product_short %> Manifest](#create-mfest)
  1. [Download and Deploy <%= vars.product_short %>](#download-deploy)
  1. [Verify Your <%= vars.product_short %> Installation](#verify)


##<a id="prereqs"></a>Prerequisites

Before you install <%= vars.product_short %>, you must have the following:

* Google Cloud Platform (GCP), vSphere, Azure, Amazon Web Services (AWS),
or OpenStack as your IaaS.

* In your IaaS, external load balancers that are not Network Load Balancers (NLB).
<%= vars.product_short %> does not work with NLBs.
For more information, see [<%= vars.product_short %> Load Balancer Issues](./troubleshooting.html#ipsec-load-balancer-issues).

* <%= vars.platform_name %> operator administration rights

* BOSH deployed through <%= vars.ops_manager %> v1.8 or later.

* The Maximum Transmission Unit (MTU) for your IaaS set in the <%= vars.app_runtime_full %> tile.
You can find the **Applications Network Maximum Transmission Unit (MTU) (in bytes)** setting
by navigating to **<%= vars.ops_manager %>** > **<%= vars.app_runtime %>** > **Networking**. <br><br>
VMware recommends the following MTU values:

    <table class="nice">
      <tr>
        <th>IaaS</th>
        <th>Recommended MTU Value</th>
      </tr>
      <tr>
        <td>GCP</td>
        <td><code>1354</code></td>
      </tr>
      <tr>
        <td>Azure</td>
        <td><code>1438</code></td>
      </tr>
      <tr>
        <td>AWS</td>
        <td>Default value</td>
      </tr>
      <tr>
        <td>vSphere</td>
        <td>Default value</td>
      </tr>
      <tr>
        <td>OpenStack</td>
        <td>Follow the recommendations of your Neutron ML2 plugin provider,
        or empirically test the correct MTU for your environment.
    </table>


##<a id="bestpractices"></a>Best Practices
  * <%= vars.product_short %> might affect the functionality of other service tiles.
    As a result, VMware recommends deploying <%= vars.app_runtime %>
    and each service tile to different isolated subnets.
    Alternatively, you can minimally deploy all service tiles to a single isolated subnet,
    apart from the <%= vars.app_runtime %> subnet.
    Some service tiles do not support <%= vars.product_short %> and must be placed in a non-<%= vars.product_short %> subnet.
  * For <%= vars.product_short %> on Linux VMs, VMware recommends any Ubuntu stemcells for vSphere, OpenStack, and HVM stemcells for AWS.
    These stemcells are available on <a href="https://network.pivotal.io/products/stemcells">VMware Tanzu Network</a>.
    If you use PV stemcells obtained from <a href="https://bosh.io">bosh.io</a>,
    see the <a href="./troubleshooting.html#ipsec-installation-issues">Packet Loss</a> section of the Troubleshooting <%= vars.product_full %> topic to adjust MTU values.

##<a id="config-network"></a>Configure Network Security

To configure network security, do one of the following procedures for your IaaS:

  + [Configure Network Security for Google Cloud Platform](#gcp), below
  + [Configure Network Security for vSphere](#vsphere), below
  + [Configure Network Security for Azure](#azure), below
  + [Configure Network Security for AWS](#aws), below
  + [Configure Network Security for OpenStack](#openstack), below

###<a id="gcp"></a>Configure Network Security for Google Cloud Platform

To configure your Google Cloud Platform (GCP) environment for <%= vars.product_short %>, do the following:

  1. Navigate to the **Networking** section of the GCP Console.
  1. Click **Firewall rules**.
  1. Click **Create Firewall Rule**.
  1. For **Name**, enter `ipsec`.
  1. For **Network**, select the network where <%= vars.ops_manager %> is deployed. For example, **opsmgr**.
  1. For **Source filter**, select **Allow from any source (0.0.0.0/0)**.
  1. For **Allowed protocols and ports**, enter `udp:500; ah; esp`.
  1. Click **Create**.
  1. Adjust the MTU value to `1354` by performing the procedure in the <a href="./troubleshooting.html#ipsec-installation-issues">Packet Loss</a> section of the Troubleshooting <%= vars.product_full %> topic.

###<a id="vsphere"></a>Configure Network Security for vSphere

<p class="note"><strong>Note:</strong> <%= vars.product_short %> is not compatible with VMware NSX-T Container Plug-in for <%= vars.app_runtime_full %>.</p>

To configure your vSphere environment for <%= vars.product_short %>, confirm that your network allows
the protocols listed in the table below:

<table>
  <tr>
    <th width="33%">Protocol Name</th>
    <th width="33%">Protocol Number</th>
    <th width="33%">Port(s)</th>
  </tr>
  <tr>
    <td>AH</td>
    <td>51</td>
    <td>Any</td>
  </tr>
  <tr>
    <td>ESP</td>
    <td>50</td>
    <td>Any</td>
  </tr>
  <tr>
    <td>UDP</td>
    <td>17</td>
    <td>500</td>
  </tr>
</table>


###<a id="azure"></a>Configure Network Security for Azure

To configure your Azure environment for <%= vars.product_short %>, do the following:

1. Confirm that your network allows the protocols listed in the table below.
<table>
  <tr>
    <th width="33%">Protocol Name</th>
    <th width="33%">Protocol Number</th>
    <th width="33%">Port(s)</th>
  </tr>
  <tr>
    <td>AH</td>
    <td>51</td>
    <td>Any</td>
  </tr>
  <tr>
    <td>ESP</td>
    <td>50</td>
    <td>Any</td>
  </tr>
  <tr>
    <td>UDP</td>
    <td>17</td>
    <td>500</td>
  </tr>
</table>

1. Adjust the MTU value to `1438`. For instructions, see <a href="./troubleshooting.html#ipsec-installation-issues">Explanation: Packet Loss</a>.


###<a id="aws"></a>Configure Network Security for AWS

To configure your AWS environment for <%= vars.product_short %>, do the following:

1. Navigate to **EC2 Dashboard** > **Security Groups**.

2. Select the Security Group with the description **<%= vars.platform_name %> VMs Security Group** and click **Edit**.

3. Create the following **Inbound Rules**.
<table border="1" class="nice">
<tr>
  <th>Type</th>
  <th>Protocol Name</th>
  <th>Protocol Number</th>
  <th>Port Range</th>
  <th>Source</th>
</tr>
<tr>
  <td>Custom Protocol</td>
  <td>AH</td>
  <td>51</td>
  <td>All</td>
  <td>10.0.0.0/16</td>
</tr>
<tr>
  <td>Custom Protocol</td>
  <td>ESP</td>
  <td>50</td>
  <td>All</td>
  <td>10.0.0.0/16</td>
</tr>
<tr>
  <td>Custom UDP Rule</td>
  <td>UDP</td>
  <td>17</td>
  <td>500</td>
  <td>10.0.0.0/16</td>
</tr>
</table>

  <p class="note"><strong>Note:</strong> The default <strong><%= vars.platform_name %> VMs Security Group</strong> is typically specified with a subnet of <code>10.0.0.0/16</code>. If your <%= vars.platform_name %> subnet is deployed to a different CIDR block, adjust the source as needed.</p>

###<a id="openstack"></a>Configure Network Security for OpenStack

<p class="note"><strong>Note:</strong> The following network configuration is optimized for Mirantis OpenStack, but other OpenStack distributions have a similar workflow.</p>

To configure your Mirantis OpenStack environment for <%= vars.product_short %>, perform the following steps:

1. Navigate to **Project / Access & Security**.

1. Select the security group and click **Manage Rules**.

1. Create the following **Ingress and Egress Rules**. Adjust the source CIDR as needed for your environment.
<table border="1" class="nice">
<tr>
  <th>Protocol Name</th>
  <th>Protocol Number</th>
  <th>Port Range</th>
  <th>Source</th>
</tr>
<tr>
  <td>ESP</td>
  <td>50</td>
  <td>Any</td>
  <td>0.0.0.0/0</td>
</tr>
<tr>
  <td>AH</td>
  <td>51</td>
  <td>Any</td>
  <td>0.0.0.0/0</td>
</tr>
<tr>
  <td>UDP</td>
  <td>17</td>
  <td>500</td>
  <td>0.0.0.0/0</td>
</tr>
</table>

##<a id="create-mfest"></a>Create the <%= vars.product_short %> Manifest

To add <%= vars.product_short %> to VMs in your deployment, you must create a runtime config file named `ipsec-addon.yml`.
The `ipsec-addon.yml` configures <%= vars.product_short %> add-on properties for Linux VMs.

To create the <%= vars.product_short %> manifest, add <%= vars.product_short %> to Linux VMs in your deployment:

1. Create an <%= vars.product_short %> runtime config file called `ipsec-addon.yml` and add the following
YAML:
  <pre>
  <strong>releases:</strong>
  \- name: ipsec
      <strong>version</strong>: 1.x.x
  addons:
  \- name: ipsec-addon
      <strong>jobs</strong>:
      \- <strong>name</strong>: ipsec
        release: ipsec
        properties:
          ipsec:
            <strong>optional</strong>: false
            <strong>ipsec\_subnets</strong>:
            \- 10.0.1.1/20
            <strong>no\_ipsec\_subnets</strong>:
            \- 10.0.1.10/32 # bosh director
            \- 10.0.1.4/32 # ops managers
            <strong>instance\_certificate</strong>: |
              -----BEGIN CERTIFICATE-----
              EXAMPLExCERTIFICATExEXAMPLExCERTIFICATExEXAMPLExCERTIFICATE
              ...
              -----END CERTIFICATE-----
            <strong>instance\_private\_key</strong>: |
              -----BEGIN EXAMPLE RSA PRIVATE KEY-----
              EXAMPLExRSAxPRIVATExKEYxDATAxEXAMPLExRSAxPRIVATExKEYxDATA
              ...
              -----END EXAMPLE RSA PRIVATE KEY-----
            <strong>ca\_certificates</strong>:
              \- |
                -----BEGIN CERTIFICATE-----
                EXAMPLExCERTIFICATExEXAMPLExCERTIFICATExEXAMPLExCERTIFICATE
                ...
                -----END CERTIFICATE-----
              \- |
                -----BEGIN CERTIFICATE-----
                EXAMPLExCERTIFICATExEXAMPLExCERTIFICATExEXAMPLExCERTIFICATE
                ...
                -----END CERTIFICATE-----
            <strong>prestart\_timeout</strong>: 30
            <strong>stop\_timeout</strong>: 30
            <strong>esp\_proposals</strong>: aes128gcm16!
            <strong>ike\_proposals</strong>: aes128-sha256-modp2048!
            <strong>log\_level</strong>: 1
            <strong>ike\_version</strong>: ike
            <strong>optional\_warn\_interval</strong>: 1
            <strong>force\_udp\_encapsulation</strong>: false
            <strong>instance\_certificate\_info\_period</strong>: 30
            <strong>instance\_certificate\_warn\_period</strong>: 14
            <strong>instance\_certificate\_error\_period</strong>: 7
            <strong>instance\_certificate\_critical\_period</strong>: 3
      include:
        stemcell:
        - <strong>os</strong>: ubuntu-trusty
        - <strong>os</strong>: ubuntu-xenial
  </pre>

1. Replace the values listed in the template above as follows:
  <table>
    <tr>
      <th width="35%">Property</th>
      <th>Instructions</th>
    </tr>
    <tr>
      <td><code><strong>version</strong></code></td>
      <td>
        <a name="version"></a>
        Specify the version number of your <%= vars.product_short %> download from VMware Tanzu Network.
      </td>
    </tr>
    <tr>
      <td><code><strong>optional</strong></code></td>
      <td>
        <a name="optional"></a>
        This value makes <%= vars.product_short %> enforcement optional.
        To add <%= vars.product_short %> to an existing <%= vars.app_runtime %> deployment, set this flag to <code>true</code>.
        After <%= vars.product_short %> has been successfully installed, set this flag back to <code>false</code> and redeploy.
        <p class="note warning"><strong>Warning:</strong> Communication between existing components fails
          if you try to add <%= vars.product_short %> to an existing deployment
          without setting <code>optional</code> to <code>true</code>.
        </p>
      </td>
    </tr>
    <tr>
      <td><code><strong>ipsec\_subnets</strong></code></td>
      <td>
        <a name="ipsec_subnets"></a>
        List the subnets that you want to be encrypted.
        You can include the entire deployment to encrypt all traffic or a portion of the network.
        Encrypt any network that handles business-sensitive data.
      </td>
    </tr>
    <tr>
      <td><code><strong>no\_ipsec\_subnets</strong></code></td>
      <td>
        <a name="no_ipsec_subnets"></a>
        List the IP address of your BOSH Director and <%= vars.ops_manager %> VM,
        along with any other IP addresses in your <%= vars.platform_name %> deployment to which you want to communicate without encryption.
        VMware recommends that you list the subnets that are used for <%= vars.platform_name %> managed services.
        Subnets for <%= vars.platform_name %> managed services that do not support <%= vars.product_short %>, such as <%= vars.ops_manager %> or service tiles,
        must be listed under <code>no\_ipsec\_subnets</code> and installed in a separate network.
        <p class="note"><strong>Note: </strong>
          If you have an external load balancer such as F5, add it to the
          <code>no\_ipsec\_subnets</code> property.
          If you want to include it in the <code>ipsec\_subnet</code>, you must
          configure it manually.
        </p>
        <p class="note warning"><strong>Warning:</strong>
          IPs that are not in <code>ipsec\_subnets</code> or <code>no\_ipsec\_subnets</code>
          have no default behavior and cannot communicate with other internal VMs.
          You must specify internal IPs in <code>ipsec\_subnets</code> or
          <code>no\_ipsec\_subnets</code>.
        </p>
        <p class="note warning"><strong>Warning:</strong>
          In GCP, if you use the default router for DNS instead of the Google public
          DNS at <code>8.8.8.8</code>, you must add the IP address of the default
          router in your subnet to <code>no\_ipsec\_subnets</code>.
          For example, <code>10.0.0.1/32</code>.
        </p>
      </td>
    </tr>
    <tr>
      <td> <code><strong>instance\_certificate</strong></code></td>
      <td>
        <a name="instance_certificate"></a>
        Copy in the signed certificate to be used by all your instance VMs.
        You must use one of the CAs in the <code>ca\_certificates</code> property to sign this certificate.
        VMware recommends that you use a self-signed certificate.
        For more information, see
        <a href="#self-signed">Generate a Self-Signed Certificate</a> below.
      </td>
    </tr>
    <tr>
      <td><code><strong>instance\_private\_key</strong></code></td>
      <td>
        <a name="instance_private_key"></a>
        Copy in the private key that corresponds to the <code>instance\_certificate</code> above.
        This key must not use a pass phrase.
      </td>
    </tr>
    <tr>
      <td><code><strong>ca\_certificates</strong></code></td>
      <td>
        <a name="ca-certs"></a>
        Copy in CA certificates for the instance VM to trust during the validation process.
        In most cases, you only need the CA certificate used to sign the instance certificate. During CA credential rotation, you need two CA certificates.
        <br><br>
        <%= vars.product_short %> <strong>v1.8.12</strong> and later supports the CA certificate chain.
        Concatenate the contents of the root and the intermediate certificates
        as one of the list items in <strong>ca\_certificates</strong>,
        with the root CA at the top:
        <pre><strong>ca\_certificates</strong>:
         - |
           -----BEGIN CERTIFICATE-----
           ... <strong>&#60;ROOT&#62;</strong>
           -----END CERTIFICATE-----
           -----BEGIN CERTIFICATE-----
           ... <strong>&#60;INTERMEDIATE 1 ISSUED BY
           THE ROOT CERT ABOVE&#62;</strong>
           -----END CERTIFICATE-----
           -----BEGIN CERTIFICATE-----
           ... <strong>&#60;INTERMEDIATE 2 ISSUED BY
           THE INTERMEDIATE 1 ABOVE
           ... AND SIGNS THE INSTANCE CERT&#62;</strong>
           -----END CERTIFICATE-----
         - |
           -----BEGIN CERTIFICATE-----
           ... <strong>&#60;SECOND ROOT&#62;</strong>
           -----END CERTIFICATE-----
        </pre>
        <p class="note"><strong>Note:</strong> The root and the intermediate certificates cannot have the same subjectName,
           also called the common name and set with <code>CN=</code>.
           The root <b>must</b> be the first certificate of the chain.
        </p>
      </td>
    </tr>
    <tr>
      <td><code><strong>prestart\_timeout</strong></code></td>
      <td>Use this to modify the 30-second default prestart timeout value. This value limits the number of seconds allowed for <%= vars.product_short %> to start before failing the attempt.</td>
    </tr>
    <tr>
      <td><code><strong>stop\_timeout</strong></code></td>
      <td>
        Use this to modify the 30-second default post stop timeout value.
        When <%= vars.product_short %> stops, communication between VMs is not encrypted and might cause errors.
        By default, <%= vars.product_short %> waits 30 seconds for all other running jobs to stop before stopping itself.
      </td>
    </tr>
    <tr>
      <td><code><strong>log\_level</strong></code></td>
      <td>
        <a name="log_level"></a>
        You can specify the IKE daemon numerical log level, ranging from <code>-1</code> to <code>4</code>.
        For more information, see <a href="https://wiki.strongswan.org/projects/strongswan/wiki/LoggerConfiguration">Logger Configuration</a> in the strongSwan documentation.
      </td>
    </tr>
    <tr>
      <td><code><strong>optional\_warn\_interval</strong></code></td>
      <td>
        <a name="optional_warn_interval"></a>
        The interval in hours of warning when <code>optional</code> property is set to true.
        It prints the warning message <code>{Date} - <%= vars.product_short %> is set to "Optional"</code> in the file
        <code>/var/vcap/sys/log/ipsec/ipsec.stdout.log</code> for Linux.
      </td>
    </tr>
    <tr>
      <td> <code><strong>force\_udp\_encapsulation</strong></code>
      <a name="force_udp_encapsulation"></a></td>
      <td>
        Available on Linux-only deployments.
        If set to <code>true</code> it forces UDP encapsulation for ESP packets.
        <p class="note warning"><strong>Warning:</strong> Setting this property to <code>true</code> in
          mixed deployments causes the deployment to fail.
          If you do not have a Linux-only deployment, you must set <code>force\_udp\_encapsulation</code>
          to <code>false</code>. </p>
      </td>
    </tr>
    <tr>
      <td><code><strong>instance\_certificate<br>\_info\_period</strong></code></td>
      <td>
        If the instance certificate expires during the set period in days, the <%= vars.product_short %>
        release writes an <code>[INFO]</code> message in the logs.
      </td>
    </tr>
    <tr>
      <td><code><strong>instance\_certificate<br>\_warn\_period</strong></code></td>
      <td>
        If the instance certificate expires during the set period in days, the <%= vars.product_short %>
        release writes a <code>[WARN]</code> message in the logs.
      </td>
    </tr>
    <tr>
      <td><code><strong>instance\_certificate<br>\_error\_period</strong></code></td>
      <td>
        If the instance certificate expires during the set period in days, the <%= vars.product_short %>
        release writes an <code>[ERROR]</code> message in the logs.
      </td>
    </tr>
    <tr>
      <td><code><strong>instance\_certificate<br>\_critical\_period</strong></code></td>
      <td>
        If the instance certificate expires during the set period in days, the <%= vars.product_short %>
        release writes a <code>[CRITICAL]</code> message in the logs.
      </td>
    </tr>
  </table>


####<a id="proposals"></a>(Optional) Configure Custom Deployment Proposals

The manifest templates given above configure a default proposal for the `ipsec-addon.yml`.
If you want to use different proposals, modify the `ipsec-addon.yml` using the following table:

1. Select the encryption type from the first row.
  <table>
    <tr>
      <th rowspan="2">Encryption Type</th>
      <th colspan="2">Linux (ipsec-addon)</th>
    </tr>
    <tr>
      <th>ike\_proposals</th>
      <th>esp\_proposals</th>
    </tr>
    <tr>
      <td>128 Bit Encryption (default)</td>
      <td><pre>aes128-sha256-modp2048!</pre></td>
      <td><pre>aes128gcm16!</pre></td>
    </tr>
    <tr>
      <td>256 Bit Encryption</td>
      <td><pre>aes256-sha256-modp2048!</pre></td>
      <td><pre>aes256gcm16!</pre></td>
    </tr>
  </table>

1. Copy the properties from that row into `ipsec-addon.yml` accordingly.
See the `ipsec-addon.yml` file example above.
  <table>
    <tr>
      <th width="35%">Property</th>
      <th>Instructions</th>
    </tr>

    <tr>
      <td><code><strong>ike\_proposals</strong></code></td>
      <td> You can modify the IKE (Main Mode) encryption and integrity algorithms, and the Diffie-Hellman group.
        The default, <code>aes128-sha256-modp2048!</code>, is 128 bit AES-CBC for encryption, SHA2\_256\_128 HMAC for integrity, and Group 14 for Diffie-Hellman.
      </td>
    </tr>
    <tr>
      <td><code><strong>esp\_proposals</strong></code></td>
      <td>You can modify the ESP (Quick Mode) encryption and integrity algorithms.
        The default, <code>aes128gcm16!</code>, is 128 bit AES-GCM with 128 bit ICV for both encryption and integrity.</td>
    </tr>
  </table>

##<a id="download-deploy"></a>Download and Deploy <%= vars.product_short %>

To download the <%= vars.product_short %> binary, add your <%= vars.product_short %> runtime config to your BOSH manifest, and deploy <%= vars.product_short %>,
follow the steps below:
<p class="note breaking"><strong>Breaking Change: </strong> If you are using <%= vars.platform_code %> v1.12 or later, you must use named runtime configs. If you have not already split your runtime config into multiple named files, do so before upgrading <%= vars.product_full %>. For general information about named runtime config files, see <a href="https://bosh.io/docs/configs.html">Generic Configs</a> in the BOSH documentation.</p>

1. Download the <%= vars.product_short %> software binary from the [VMware Tanzu Network](https://network.pivotal.io/products/p-ipsec-addon) to your local machine.

1. Copy the software binary to your <%= vars.ops_manager %> instance.
<pre class="terminal">$ scp -i PATH-TO-PRIVATE-KEY ipsec-release.tar.gz ubuntu@YOUR-OPS-MANAGER-VM-IP:</pre>

1. Copy the <%= vars.product_short %> runtime config file to your <%= vars.ops_manager %> instance.
<pre class="terminal">$ scp -i PATH-TO-PRIVATE-KEY ipsec-addon.yml ubuntu@YOUR-OPS-MANAGER-VM-IP:</pre>

1. SSH into <%= vars.ops_manager %>.
<pre class="terminal">$ ssh -i PATH-TO-PRIVATE-KEY ubuntu@YOUR-OPS-MANAGER-VM-IP</pre>

1. On the <%= vars.ops_manager %> VM, navigate to the software binary location in your working directory.
<pre class="terminal">$ cd PATH-TO-BINARY</pre>

1. Log in to the BOSH Director.
  1. On the <%= vars.ops_manager %> VM, create an alias in the BOSH CLI for your BOSH Director IP address. For example:
      <pre class="terminal">$ bosh alias-env my-env -e 10.0.0.3</pre>
  1. Log in to the BOSH Director, specifying the newly created alias.
      For example:
      <pre class="terminal">$ bosh -e my-env log-in</pre>

1. Upload your release, specifying the path to the tarballed <%= vars.product_short %> binary, by running the following command:
<pre class="terminal">$ bosh -e my-env upload-release PATH-TO-BINARY/BINARY-NAME.tar</pre>

1. List the releases by running the following command, and confirm that the <%= vars.product_short %> binary file appears:
<pre class="terminal">$ bosh -e my-env releases</pre>

1. Download your current runtime config and save as `bosh-manifest.yml` by running the following command:
<pre class="terminal">$ bosh -e my-env runtime-config > bosh-manifest.yml</pre>

1. Update your runtime configuration to include <%= vars.product_short %>.
<pre class="terminal">$ bosh -e my-env update-runtime-config --name=ipsec PATH/bosh-manifest.yml</pre>

1. Verify your runtime configuration changes match what you specified in the <%= vars.product_short %> manifest file.
<pre class="terminal"> $ bosh -e my-env runtime-config --name=ipsec</pre>

    For example:

    <pre class="terminal">
    $ bosh -e my-env runtime-config --name=ipsec
    Acting as user 'admin' on 'micro'

    releases:
     <span>-</span> {name: ipsec, version: 1.9.9}

    addons:
     name: ipsec-addon
      jobs:
      <span>-</span> name: ipsec
        release: ipsec
        ...
    </pre>

1. If you have already deployed <%= vars.app_runtime %> or are adding <%= vars.product_short %> to an existing deployment:
  1. Set the `optional` flag to `true`.
  1. Navigate to your **Installation Dashboard** in <%= vars.ops_manager %>.
  1. If you are using <%= vars.ops_manager %> v2.3 or later, click **Review Pending Changes**.
  For more information about this <%= vars.ops_manager %> page,
  see [Reviewing Pending Product Changes](https://docs.pivotal.io/pivotalcf/customizing/review-pending-changes.html).
  1. Click **Apply Changes**
  1. Wait for the installation to complete.
  1. Set the `optional` flag to `false`.
  1. Update the runtime config.
      <pre class="terminal">$ bosh -e my-env update-runtime-config --name=ipsec PATH/bosh-manifest.yml</pre>

1. Navigate to your **Installation Dashboard**.
1. If you are using <%= vars.ops_manager %> v2.3 or later, click **Review Pending Changes**.
1. Click **Apply Changes**.

1. If the <%= vars.app_runtime %> tile is not yet installed:
  1. Navigate to your **Installation Dashboard** in <%= vars.ops_manager %>.
  1. If you are using <%= vars.ops_manager %> v2.3 or later, click **Review Pending Changes**.
  1. Click **Apply Changes**
  1. Deploy <%= vars.app_runtime %> by following the installation instructions for your IaaS.
     For more information, see [Installing <%= vars.platform_name %>](http://docs.pivotal.io/pivotalcf/installing/index.html).

1. The `bosh-manifest.yml` and `ipsec-addon.yml` files contain sensitive information. When the deployment process is completed, remove any unneeded copies of these files from the local workstation. VMware recommends that you use encryption or logical access controls to secure any archival copies of manifest files you want to retain.

##<a id="verify"></a>Verify Your <%= vars.product_short %> Installation

After installing <%= vars.product_short %> and deploying <%= vars.app_runtime %> , perform the following steps to verify your <%= vars.product_short %> installation:

1. List the job VMs in your deployment by running the following command:

    ```
    bosh -e BOSH-ENVIRONMENT vms
    ```

1. Open an SSH connection into the VM, using the job name and index of any VM found above, by running the following command:

    ```
    bosh -e BOSH-ENVIRONMENT -d DEPLOYMENT-NAME ssh JOB-NAME/INDEX
    ```

    <p class="note"><strong>Note:</strong> The exact VM does not matter, because installing <%= vars.product_short %> loads <%= vars.product_short %> on all VMs deployed by <%= vars.ops_manager %>.</p>

1. Enter the root environment with root privileges by running:

    ```
    sudo su -
    ```

1. Confirm that your `ipsec` job is listed as a `bosh` job by running:

    ```
    monit summary
    ```
    For example:
    <pre class="terminal">
    $ monit summary
    The Monit daemon 5.2.5 uptime: 18h 32m
    ...
    Process 'ipsec'                     running
    System 'system\_localhost'           running
    </pre>


1. Confirm that <%= vars.product_short %> is running. If <%= vars.product_short %> is not running, this command produces no output.

    ```
    PATH-TO-IPSEC/ipsec statusall
    ```
    For example:
    <pre class="terminal">
    $ /var/vcap/packages/strongswan-5.6.3/sbin/ipsec statusall
    Status of IKE charon daemon (strongSwan 5.6.3, Linux 3.19.0-56-generic, x86\_64):
      uptime: 18 hours, since Mar 16 23:58:50 2016
      malloc: sbrk 2314240, mmap 0, used 1182400, free 1131840
      worker threads: 11 of 16 idle, 5/0/0/0 working, job queue: 0/0/0/0, scheduled: 206
      loaded plugins: charon aes sha1 sha2 random nonce x509 revocation constraints pubkey pkcs1 pkcs7 pkcs8 pkcs12 pem gmp xcbc cmac hmac attr kernel-netlink socket-default stroke
    Listening IP addresses:
      10.10.5.66
    Connections:
    ipsec-10.10.4.0/24:  %any...%any  IKEv1/2
    ipsec-10.10.4.0/24:   local:  [CN=test-cert-1-ca-1] uses public key authentication
    ipsec-10.10.4.0/24:    cert:  "CN=test-cert-1-ca-1"
    ipsec-10.10.4.0/24:   remote: uses public key authentication
    ipsec-10.10.9.0/24:   child:  10.10.5.66/32 === 10.10.9.0/24 TRANSPORT
    no-ipsec-10.10.4.1/32:  %any...%any  IKEv1/2
    no-ipsec-10.10.4.1/32:   local:  uses public key authentication
    no-ipsec-10.10.4.1/32:   remote: uses public key authentication
    no-ipsec-10.10.4.1/32:   child:  dynamic === 10.10.4.1/32 PASS
    Shunted Connections:
    no-ipsec-10.10.4.1/32:  dynamic === 10.10.4.1/32 PASS
    no-ipsec-10.10.5.1/32:  dynamic === 10.10.5.1/32 PASS
    no-ipsec-10.10.6.1/32:  dynamic === 10.10.6.1/32 PASS
    Routed Connections:
    ipsec-10.10.9.0/24{6}:  ROUTED, TRANSPORT, reqid 6
    ipsec-10.10.9.0/24{6}:   10.10.5.66/32 === 10.10.9.0/24
    ipsec-10.10.8.0/24{5}:  ROUTED, TRANSPORT, reqid 5
    ipsec-10.10.4.0/24{1}:   10.10.5.66/32 === 10.10.4.0/24
    Security Associations (45 up, 0 connecting):
    ipsec-10.10.4.0/24[459]: ESTABLISHED 13 seconds ago, 10.10.5.66[CN=test-cert-1-ca-1]...10.10.4.38[CN=test-cert-1-ca-1]
    ipsec-10.10.4.0/24{1527}:   10.10.5.66/32 === 10.10.4.38/32
    ...
    </pre>

##<a id="self-signed"></a>Generate a Self-Signed Certificate with OpenSSL

Follow these steps to generate a self-signed certificate for your <%= vars.product_short %> manifest.

1. [Download](./scripts/openssl-create-ipsec-certs.sh) the `openssl-create-ipsec-certs.sh` bash script.
1. Navigate to the directory where you downloaded the script:
  <pre class="terminal">$ cd ~/workspace</pre>
1. Change the permissions of the script:
  <pre class="terminal">$ chmod u+x openssl-create-ipsec-certs.sh</pre>
1. Run the script:
  <pre class="terminal">$ ./openssl-create-ipsec-certs.sh</pre>
1. This generates four files in a new `certs` directory where the script is run:
   * **pcf-ipsec-ca-cert.pem** --- this value can be used as the CA Cert in the `ca_certificates` manifest field.
   * **pcf-ipsec-ca-key.pem** --- the key used to sign the generated CA Cert.
   * **pcf-ipsec-peer-key.pem** --- this value can be used as the instance private key in the `instance_private_key` manifest field.
   * **pcf-ipsec-peer-cert.pem** --- this value can be used as the instance certificate in the `instance_certificate` manifest field.
1. Because this certificate expires in 365 days, set a calendar reminder to rotate the certificate within the year.
   For instructions on changing certificates, see [Rotating <%= vars.product_short %> Certificates](credentials.html).
